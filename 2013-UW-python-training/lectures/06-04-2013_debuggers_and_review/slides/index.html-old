<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=1024, user-scalable=no">

	<title>Isilon Advanced Python Week 9 : Performance and Profiling</title>
	
	<!-- Required stylesheet -->
	<link rel="stylesheet" href="core/deck.core.css">
	
	<!-- Extension CSS files go here. Remove or add as needed. -->
	<link rel="stylesheet" href="extensions/goto/deck.goto.css">
	<link rel="stylesheet" href="extensions/menu/deck.menu.css">
	<link rel="stylesheet" href="extensions/navigation/deck.navigation.css">
	<link rel="stylesheet" href="extensions/status/deck.status.css">
	<link rel="stylesheet" href="extensions/hash/deck.hash.css">
	<link rel="stylesheet" href="extensions/scale/deck.scale.css">

	<!-- Style theme. More available in /themes/style/ or create your own. -->
    <!-- default
	<link rel="stylesheet" href="themes/style/neon.css">
    -->
	<link rel="stylesheet" href="themes/style/web-2.0.css">

	
	<!-- Transition theme. More available in /themes/transition/ or create your own. -->
    <!--
	<link rel="stylesheet" href="themes/transition/fade.css">
    -->
	<link rel="stylesheet" href="themes/transition/horizontal-slide.css">
	
	<!-- Required Modernizr file -->
	<script src="modernizr.custom.js"></script>
</head>
<body class="deck-container">


<section class="slide">
	<h2>Debuggers, review, and further topics</h2>
    <p>June 04, 2013</p>
    <p>Joseph Sheedy</p>
    <p><i>joseph@velotronheavyindustries.com</i></p>
    <p>Git repository:  <a href="https://github.com/jsheedy/2013-UW-python-training/" target="_blank">https://github.com/jsheedy/2013-UW-python-training/</a></p>
</section>

<section class="slide">
	<h2>Performance and Profiling</h2>
	<h3>Today's topics</h3>
    <ul>
        <li>Debugging
        <li>Review
        <li>Advanced topics
    </ul>
</section>

<section class="slide">
	<h2>Debugging Python</h2>
    <p>Debuggers are code which allows the inspection of state of other code during runtime.</p>

    <p>Rudimentary tools
        <ul>
            <li>print()</li>
            <li>import logging.debug</li>
            <li>assert()</li>
        </ul>
    </p>

    <p>Console debuggers</p>
        <ul>
            <li>pdb/ipdb</li>
            <li>pudb <a href="https://pypi.python.org/pypi/pudb">https://pypi.python.org/pypi/pudb</a></li>
        </ul>
    </p>

    <p>GUI debuggers</p>
        <ul>
            <li>Winpdb</li>
            <li>Eclipse</li>
            <li>Visual Studio</li>
        </ul>
    </p>
</section>

<section class="slide">
    <h2>Debugging with ipdb</h2>
    <p>ipdb survival guide</p>
<pre>
<code>
% python -m ipdb my_sweet_app.py
ipdb> break my_sweet_app.py:4
ipdb> break 1
ipdb> clear 1
ipdb> break # list breakpoints
ipdb> list
ipdb> return # execute until function returns
ipdb> step
ipdb> down # one level down the stack
ipdb> up # one level up
ipdb> where # print stack trace, aliased to bt
ipdb> continue

</code>
</pre>
</section>

<section class="slide">
    <h2>lambda functions</h2>
    <p><span style="font-size:3em">Λ, λ</span></p>
    <p>anonymous (nameless) functions</p>
    <p>useful if you need to pass into a function once, and used anywhere else
    <p>they're not magic, these definitions are equivalent:
<code>
<pre>
add = lambda x,y : x+y

# OR

def add(x,y):
    return x+y


</pre>
</code>
</section>

<section class="slide">
    <h2>Using lambda to create a closure</h2>
    <p>The argument passed to a lambda function persists to functions that refer to the lambda function</p>
<code>
<pre>
def add_const_factory(y):
    return lambda x: x+y

add_one = add_const_factory(1)
add_threeseventhreethreeseven = add_const_factory(37337)

print add_one(1)
print add_threeseventhreethreeseven(1)

print add_one(1)(2)
</pre>
</code>
</section>

<section class="slide">
    <h2>functional programming in Python</h2>
    <p>The functools module is for higher-order functions: functions that act on or return other functions. In general, any callable object can be treated as a function for the purposes of this module.</p>
    <p>functional programming helpers in Python:</p>
    <ul>
        <li>filter(func, sequence) - returns only the values from iter for which func evaluates to true
        <li>map(func, sequence) - returns a list of the results of applying func to the elements of sequence
        <li>reduce() - applies a function of two arguments cumulatively to the elements of a sequence
        <p>i.e. reduce(lambda x, y: x+y, xrange(6)) calculates ((((1+2)+3)+4)+5)</p>
    </ul>
    <p>
    In Python3, reduce has been downgraded from a top level keyword, use functools.reduce()
    <a href="http://docs.python.org/3.0/library/functools.html#functools.reduce">http://docs.python.org/3.0/library/functools.html#functools.reduce</a>
    </p>
</section>

<section class="slide">
    <h2>title</h2>
<code>
<pre>
data = [(1,1), (2,2), (3,4), (37337, 10**9)]
print map(lambda x: x[0]==x[1], data)
print filter(lambda x: x[0]==x[1], data)
print reduce(lambda x,y: (x[0]+y[0], x[1]+y[1]), data)
</pre>
</code>
</section>

<section class="slide">
    <h2>lambda function utility</h2>
    <ul>
        <li>Callback functions
        <li>functions that operate on functions
        <li>sort function keyword arg
    </ul>
</section>

<section class="slide">
    <h2>sorting</h2>
    <p>text</p>
</section>

<!--
<section class="slide">
    <h2>title</h2>
    <p>text</p>
</section>
-->

<section class="slide">
    <h1>Questions?</h1>
</section>

<!-- End slides. -->


<!-- Begin extension snippets. Add or remove as needed. -->

<!-- deck.navigation snippet -->
<a href="#" class="deck-prev-link" title="Previous">&#8592;</a>
<a href="#" class="deck-next-link" title="Next">&#8594;</a>

<!-- deck.status snippet -->
<p class="deck-status">
	<span class="deck-status-current"></span>
	/
	<span class="deck-status-total"></span>
</p>

<!-- deck.goto snippet -->
<form action="." method="get" class="goto-form">
	<label for="goto-slide">Go to slide:</label>
	<input type="text" name="slidenum" id="goto-slide" list="goto-datalist">
	<datalist id="goto-datalist"></datalist>
	<input type="submit" value="Go">
</form>

<!-- deck.hash snippet -->
<a href="." title="Permalink to this slide" class="deck-permalink">#</a>

<!-- End extension snippets. -->


<!-- Required JS files. -->
<script src="jquery-1.7.2.min.js"></script>
<script src="core/deck.core.js"></script>

<!-- Extension JS files. Add or remove as needed. -->
<script src="core/deck.core.js"></script>
<script src="extensions/hash/deck.hash.js"></script>
<script src="extensions/menu/deck.menu.js"></script>
<script src="extensions/goto/deck.goto.js"></script>
<script src="extensions/status/deck.status.js"></script>
<script src="extensions/navigation/deck.navigation.js"></script>
<script src="extensions/scale/deck.scale.js"></script>

<!-- Initialize the deck. You can put this in an external file if desired. -->
<script>
	$(function() {
		$.deck('.slide');
	});
</script>
</body>
</html>
